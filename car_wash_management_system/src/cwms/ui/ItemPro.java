/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cwms.ui;

import cwms.controller.ItemHandler;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Asanka
 */
public class ItemPro extends javax.swing.JFrame {
PreparedStatement prepst = null;
ResultSet res = null;
Connection dbcon = null;

    /**
     * Creates new form EmployeeProfile
     */
    public ItemPro() {
        initComponents();
        comboFill();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        itemName = new javax.swing.JLabel();
        itemDate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        itemPrice = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        itemQty = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        discRate = new javax.swing.JLabel();
        retriveBtn = new javax.swing.JButton();
        itemCat = new javax.swing.JComboBox<String>();
        itemID = new javax.swing.JTextField();
        itemNameNew = new javax.swing.JTextField();
        itemDateNew = new com.toedter.calendar.JDateChooser();
        itemPriceNew = new javax.swing.JTextField();
        itemQtyNew = new javax.swing.JTextField();
        discRateNew = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(25, 77, 25));

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Item ID                    :");

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Item Description    :");

        itemName.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        itemName.setForeground(new java.awt.Color(255, 255, 255));

        itemDate.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        itemDate.setForeground(new java.awt.Color(255, 255, 255));
        itemDate.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Pruchase Date       :");

        updateBtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        updateBtn.setText("Update Profile");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        deleteBtn.setText("Delete Profile");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Item Profile");

        jButton8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Exit_26px.png")); // NOI18N
        jButton8.setText("Exit");

        jLabel10.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Item Category        :");

        jButton10.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Back Arrow_26px.png")); // NOI18N

        jButton12.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Home_26px.png")); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Unit Price               :");

        itemPrice.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        itemPrice.setForeground(new java.awt.Color(255, 255, 255));
        itemPrice.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel12.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Quantity                 :");

        itemQty.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        itemQty.setForeground(new java.awt.Color(255, 255, 255));
        itemQty.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel14.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Discount Rate (%) :");

        discRate.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        discRate.setForeground(new java.awt.Color(255, 255, 255));
        discRate.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        retriveBtn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 14)); // NOI18N
        retriveBtn.setText("Retrive Profile");
        retriveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retriveBtnActionPerformed(evt);
            }
        });

        itemCat.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCatActionPerformed(evt);
            }
        });

        itemID.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemID.setPreferredSize(new java.awt.Dimension(6, 25));
        itemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemIDActionPerformed(evt);
            }
        });

        itemNameNew.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemNameNew.setPreferredSize(new java.awt.Dimension(6, 25));

        itemDateNew.setDateFormatString("dd-MMM-yyyy");
        itemDateNew.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemDateNew.setMaxSelectableDate(new java.util.Date(4102428682000L));
        itemDateNew.setMinSelectableDate(new java.util.Date(946666882000L));

        itemPriceNew.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemPriceNew.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        itemPriceNew.setPreferredSize(new java.awt.Dimension(6, 25));
        itemPriceNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemPriceNewActionPerformed(evt);
            }
        });

        itemQtyNew.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        itemQtyNew.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        itemQtyNew.setPreferredSize(new java.awt.Dimension(6, 25));

        discRateNew.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        discRateNew.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        discRateNew.setPreferredSize(new java.awt.Dimension(6, 25));

        jLabel37.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel37.setText("%");
        jLabel37.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(itemCat, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(itemID, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel4)
                        .addGap(10, 10, 10)
                        .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(itemNameNew, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(itemDate, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(itemDateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jLabel14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(303, 303, 303)
                                .addComponent(discRateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(353, 353, 353)
                                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(retriveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(10, 10, 10)
                                .addComponent(itemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addComponent(discRate, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemPriceNew, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemQtyNew, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(itemCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel2))
                    .addComponent(itemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(itemNameNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(itemDateNew, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(itemPriceNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(itemQtyNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemQty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14)
                            .addComponent(discRateNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel37)
                            .addComponent(discRate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(retriveBtn)
                            .addComponent(updateBtn)
                            .addComponent(deleteBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jButton8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboFill() 
    {
        try 
        {
            dbcon = DriverManager.getConnection("jdbc:mysql://localhost/groomings_db", "root", "");
            String data = "SELECT * FROM itemcat";
            prepst = dbcon.prepareStatement(data);   
            res = prepst.executeQuery();
            itemCat.removeAllItems();

            
            while(res.next())
            {
               
                String cat = res.getString("cat");
                itemCat.addItem(cat);
                itemCat.setSelectedItem(null);

            }
                
            
        } 
        
        catch (Exception e) 
        {
            e.printStackTrace();
        } 
    }
    
    public void getValues()
    {
        String temp = itemID.getText().trim();
        String iidcheck = "SELECT item_id FROM item WHERE item_id=?";
        
        try {
            
            prepst = dbcon.prepareStatement(iidcheck);
            prepst.setString(1, temp);
            ResultSet rest=prepst.executeQuery();
            
        if (itemCat.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select the Item Category");
   
        }
            
        else if(itemID.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the Item ID");

        }
        
        else if(!rest.next()){
            itemName.setText("");
            itemDate.setText("");
            itemPrice.setText("");
            itemQty.setText("");
            discRate.setText("");
            JOptionPane.showMessageDialog(null, "Non existing Item ID");

            } 
        
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
        
        String tmp = itemID.getText().trim();
        String sql = "SELECT * FROM item WHERE item_id=?";
        try {
         prepst = dbcon.prepareStatement(sql);
         prepst.setString(1, tmp);
         res=prepst.executeQuery();
         
         if(res.next()){
         String iname = res.getString("item_name");
         String idate = res.getString("pur_date");
         String iprice = res.getString("unit_price");
         String iqty = res.getString("qty");
         String idiscount = res.getString("discount");
         itemName.setText(iname);
         itemDate.setText(idate);
         itemPrice.setText(iprice);
         itemQty.setText(iqty);
         discRate.setText(idiscount);
         }
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void updateValues()
    {
        String temp = itemID.getText().trim();
        String iidcheck = "SELECT item_id FROM item WHERE item_id=?";
        
        try {
            
            prepst = dbcon.prepareStatement(iidcheck);
            prepst.setString(1, temp);
            ResultSet rest=prepst.executeQuery();
            
            
            
        if (itemCat.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select the Item Category");
            return;
   
        }
            
        else if(itemID.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the Item ID");
            return;
        }
        
        else if(!rest.next()){
            itemName.setText("");
            itemDate.setText("");
            itemPrice.setText("");
            itemQty.setText("");
            discRate.setText("");
            JOptionPane.showMessageDialog(null, "Non existing Item ID");
            return;
        }
        
        else if (
                itemName==null && 
                itemDate==null && 
                itemPrice==null && 
                itemQty==null && 
                discRate==null || 
                (itemName.getText().trim().equals("")) && 
                (itemDate.getText().trim().equals("")) && 
                (itemPrice.getText().trim().equals("")) && 
                (itemQty.getText().trim().equals("")) && 
                (discRate.getText().trim().equals(""))){
            JOptionPane.showMessageDialog(null, "Please press the Retrive Profile button");
            return;
        }
        else if((itemNameNew.getText().trim().equals("")) && 
                (itemDateNew.getDate()==null) && 
                (itemPriceNew.getText().trim().equals("")) && 
                (itemQtyNew.getText().trim().equals("")) && 
                (discRateNew.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(null, "Please enter updated information");
            return;
        }
        }
        catch (Exception e) {
            e.printStackTrace();
            
        } 
          
          
           
            
            String itemid = itemID.getText().trim();
            String itemnamedef = itemName.getText().trim();
            String itemdatedef = itemDate.getText().trim();
            String itempricedef = itemPrice.getText().trim();
            String itemqtydef = itemQty.getText().trim();
            String itemdiscdef = discRate.getText().trim();
            ItemHandler ih1=new ItemHandler();
           
            if(!itemNameNew.getText().trim().equals("")){
                
             
                        itemnamedef = itemNameNew.getText().trim();
            }
            
            
            if(itemDateNew.getDate()!=null){
                
                java.util.Date newdate = itemDateNew.getDate();
                SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
               
                        itemdatedef = df.format(newdate);
                
               
            }
           
             
            if(!itemPriceNew.getText().trim().equals("")){
                
                
                itempricedef = itemPriceNew.getText().trim();
                
            }
            
            if(!itemQtyNew.getText().trim().equals("")){
                
               
                itemqtydef = itemQtyNew.getText().trim();
            }   
           
            
            if(!discRateNew.getText().trim().equals("")){
                
               
                    itemdiscdef    = discRateNew.getText().trim();
                
            } 
            
            ih1.updateItem(itemid,itemnamedef,itemdatedef, itempricedef, itemqtydef,itemdiscdef);
            postUpdate();    
                
        } 
            
            
            
    
    private void postUpdate()
    {   
        itemCat.setSelectedItem(null);
        itemID.setText(null);
        itemName.setText(null);
        itemNameNew.setText(null);
        itemDate.setText(null);
        itemDateNew.setCalendar(null);
        itemPrice.setText(null);
        itemPriceNew.setText(null);
        itemQty.setText(null);
        itemQtyNew.setText(null);
        discRate.setText(null);
        discRateNew.setText(null);    
            
        JOptionPane.showMessageDialog(null, "Item successfully updated.");
        
    }
    
    private void removeItem()
    {
        String temp = itemID.getText().trim();
        String iidcheck = "SELECT item_id FROM item WHERE item_id=?";
        
        try {
            
            prepst = dbcon.prepareStatement(iidcheck);
            prepst.setString(1, temp);
            ResultSet rest=prepst.executeQuery();
            
        if (itemCat.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Please select the Item Category");
            return;
        }
            
        else if(itemID.getText().trim().equals("")){
            JOptionPane.showMessageDialog(null, "Please enter the Item ID");
            return;
        }
        
        else if(!rest.next()){
            itemName.setText("");
            itemDate.setText("");
            itemPrice.setText("");
            itemQty.setText("");
            discRate.setText("");
            JOptionPane.showMessageDialog(null, "Non existing Item ID");
            return;
            }
        else if (
                itemName==null && 
                itemDate==null && 
                itemPrice==null && 
                itemQty==null && 
                discRate==null || 
                (itemName.getText().trim().equals("")) && 
                (itemDate.getText().trim().equals("")) && 
                (itemPrice.getText().trim().equals("")) && 
                (itemQty.getText().trim().equals("")) && 
                (discRate.getText().trim().equals(""))){
            JOptionPane.showMessageDialog(null, "Please press the Retrive Profile button");
            return;
        }
        
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
    
        
        try {
         
            String cmessage = "Do you wish to delete the Item from the Database?";   
            String conf = "Exit";
            int confirm = JOptionPane.showConfirmDialog(null, cmessage, conf, JOptionPane.YES_NO_OPTION);
            if(confirm == JOptionPane.YES_NO_OPTION){
                ItemHandler ih=new ItemHandler();
                ih.deleteItem(itemID.getText());
              
            
               
            itemCat.setSelectedItem(null);
            itemID.setText(null);
            itemName.setText(null);
            itemNameNew.setText(null);
            itemDate.setText(null);
            itemDateNew.setCalendar(null);
            itemPrice.setText(null);
            itemPriceNew.setText(null);
            itemQty.setText(null);
            itemQtyNew.setText(null);
            discRate.setText(null);
            discRateNew.setText(null);    
               
            JOptionPane.showMessageDialog(null, "Item successfully deleted");   
        }
        else
        {
           JOptionPane.getRootFrame().dispose();
        }
        } catch (Exception e) {
        }
        
    }
    
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        Main m1=new Main();
        m1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void retriveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retriveBtnActionPerformed
            getValues();
    }//GEN-LAST:event_retriveBtnActionPerformed

    private void itemCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemCatActionPerformed

    private void itemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemIDActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
            updateValues();
    }//GEN-LAST:event_updateBtnActionPerformed

    private void itemPriceNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemPriceNewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemPriceNewActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
            removeItem();
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemPro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel discRate;
    private javax.swing.JTextField discRateNew;
    private javax.swing.JComboBox<String> itemCat;
    private javax.swing.JLabel itemDate;
    private com.toedter.calendar.JDateChooser itemDateNew;
    private javax.swing.JTextField itemID;
    private javax.swing.JLabel itemName;
    private javax.swing.JTextField itemNameNew;
    private javax.swing.JLabel itemPrice;
    private javax.swing.JTextField itemPriceNew;
    private javax.swing.JLabel itemQty;
    private javax.swing.JTextField itemQtyNew;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton retriveBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cwms.ui;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Asanka
 */
public class SearchGRN extends javax.swing.JFrame {
PreparedStatement prepst = null;
ResultSet res = null;
Connection dbcon = null;

    /**
     * Creates new form EmployeeProfile
     */
    public SearchGRN() {
        initComponents();
        comboFill();
        tableInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grnDate = new com.toedter.calendar.JDateChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        grnID = new javax.swing.JTextField();
        searchGrn = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grnTable = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totalFrom = new javax.swing.JTextField();
        totalTo = new javax.swing.JTextField();
        supplierName = new javax.swing.JComboBox<String>();
        grnDateTo = new com.toedter.calendar.JDateChooser();
        grnDateFrom = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();

        grnDate.setDateFormatString("dd-MMM-yyyy");
        grnDate.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        grnDate.setMaxSelectableDate(new java.util.Date(4102428682000L));
        grnDate.setMinSelectableDate(new java.util.Date(946666882000L));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(25, 77, 25));

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search GRN");

        jButton7.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Home_26px.png")); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Back Arrow_26px.png")); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("GRN ID                     :");

        jLabel4.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Supplier Name        :");

        grnID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grnIDMouseClicked(evt);
            }
        });

        searchGrn.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        searchGrn.setText("Search");
        searchGrn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchGrnActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Microsoft JhengHei", 0, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        grnTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        grnTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GRN ID", "Supplier ID", "Supplier Name", "Purchase Date", "Total Amount (Rs.)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grnTable);

        jButton8.setFont(new java.awt.Font("Microsoft JhengHei", 0, 11)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Desktop\\cwms_sherry\\project icons\\Exit_26px.png")); // NOI18N
        jButton8.setText("Exit");

        jLabel5.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Purchased Date       :");

        jLabel6.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Total Amount (Rs.)  :");

        totalFrom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalFromMouseClicked(evt);
            }
        });

        totalTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                totalToMouseClicked(evt);
            }
        });

        supplierName.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        supplierName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierNameMouseClicked(evt);
            }
        });

        grnDateTo.setDateFormatString("dd-MMM-yyyy");
        grnDateTo.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        grnDateTo.setMaxSelectableDate(new java.util.Date(4102428682000L));
        grnDateTo.setMinSelectableDate(new java.util.Date(946666882000L));

        grnDateFrom.setToolTipText("");
        grnDateFrom.setDateFormatString("dd-MMM-yyyy");
        grnDateFrom.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        grnDateFrom.setMaxSelectableDate(new java.util.Date(4102428682000L));
        grnDateFrom.setMinSelectableDate(new java.util.Date(946666882000L));

        jLabel16.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("To :");

        jLabel17.setFont(new java.awt.Font("Microsoft JhengHei", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("To :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(26, 26, 26))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(searchGrn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(203, 203, 203))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(grnID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(grnDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel17))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalTo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grnDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 147, Short.MAX_VALUE)))
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(grnID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(grnDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(totalFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(grnDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(totalTo, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchGrn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboFill() 
    {
        try 
        {
            dbcon = DriverManager.getConnection("jdbc:mysql://localhost:3306/groomings_db?useSSL=false", "root", "");
            String data = "SELECT * FROM supplier";
            prepst = dbcon.prepareStatement(data);   
            res = prepst.executeQuery();
            supplierName.removeAllItems();

            
            while(res.next())
            {
               
                String sup_name = res.getString("sup_name");
                supplierName.addItem(sup_name);
                supplierName.setSelectedItem(null);

            }
                
            
        } 
        
        catch (Exception e) 
        {
            e.printStackTrace();
        } 
    }
    
    private void tableInit()
    {
        JTableHeader header= grnTable.getTableHeader();
        TableCellRenderer rendererFromHeader = grnTable.getTableHeader().getDefaultRenderer();
        JLabel headerLabel = (JLabel) rendererFromHeader;
        headerLabel.setHorizontalAlignment(JLabel.CENTER);
    }
    
    private void tableCustom()
    {
        JTableHeader header= grnTable.getTableHeader();
        TableColumnModel colMod = header.getColumnModel();
        
        TableColumn tabCol0 = colMod.getColumn(0);
        tabCol0.setHeaderValue("GRN ID");
        TableColumn tabCol1 = colMod.getColumn(1);
        tabCol1.setHeaderValue("Supplier ID");
        TableColumn tabCol2 = colMod.getColumn(2);
        tabCol2.setHeaderValue("Supplier Name");
        TableColumn tabCol3 = colMod.getColumn(3);
        tabCol3.setHeaderValue("Purchase Date");
        TableColumn tabCol4 = colMod.getColumn(4);
        tabCol4.setHeaderValue("Total Amount (Rs.)");

        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        grnTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        grnTable.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        grnTable.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
        grnTable.getColumnModel().getColumn(3).setCellRenderer( centerRenderer );
        
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment( JLabel.RIGHT );
        grnTable.getColumnModel().getColumn(4).setCellRenderer( rightRenderer );
    }
    
    private void tableCleaner()
    {
        DefaultTableModel model = (DefaultTableModel) grnTable.getModel();
        model.setRowCount(0);
    }
    
    private void cleanAction()
    {       
            grnID.setText(null);   
            supplierName.setSelectedItem(null);
            grnDateFrom.setCalendar(null);
            grnDateTo.setCalendar(null);
            totalFrom.setText(null);
            totalTo.setText(null);
            tableCleaner();

            releaseField();
            subreleaseField();
            grnID.setEnabled(true);
    }
    
    private void getSid()
    {
        String tmp = (String)supplierName.getSelectedItem();
        String sql = "SELECT * FROM supplier WHERE sup_name=?";
        try {
         prepst = dbcon.prepareStatement(sql);
         prepst.setString(1, tmp);
         res=prepst.executeQuery();
         
         if(res.next()){
         String sid = res.getString("sup_id");
         
         }
            
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void passData()
    {
        getSid();
        
        
        if(     (grnID==null || grnID.getText().trim().equals("")) && 
                (supplierName.getSelectedItem()==null) &&
                (grnDateFrom.getDate()==null) &&
                (grnDateTo.getDate()==null) &&
                (totalFrom==null || totalFrom.getText().trim().equals("")) &&
                (totalTo==null || totalTo.getText().trim().equals("")))
        {
            JOptionPane.showMessageDialog(null, "Please select a filter method");
            return;
        }
     
        else if ((grnID==null || 
                  grnID.getText().trim().equals("")) && 
                  supplierName.getSelectedItem()==null)
        {    
            do
            {
              JOptionPane.showMessageDialog(null, "Please select the Supplier Name");
              return;  
            }
            while((grnID==null || grnID.getText().trim().equals("")) && supplierName.getSelectedItem()!=null);
        }
        
        else if ((supplierName.getSelectedItem()!=null) && 
                 (grnDateFrom.getDate()==null))
        {    
            do
            {
              JOptionPane.showMessageDialog(null, "Please select the Purchase Date filter options to proceed");
              return;  
            }
            while((grnDateFrom.getDate()!=null));
        }
        
        else if ((supplierName.getSelectedItem()!=null) && 
                 (grnDateFrom.getDate()!=null) && 
                 (grnDateTo.getDate()==null))
        {    
            do
            {
              JOptionPane.showMessageDialog(null, "Please complete the Purchase Date filter options to proceed");
              return;  
            }
            while((grnDateTo.getDate()!=null));
        }
        
        //Instance #1 (GRN ID only)
        else if ((grnID!=null || !(totalFrom.getText().trim().equals(""))) &&
                (supplierName.getSelectedItem()==null) &&
                (grnDateFrom.getDate()==null) &&
                (grnDateTo.getDate()==null) &&
                (totalFrom==null || totalFrom.getText().trim().equals(""))&& 
                (totalTo==null || totalTo.getText().trim().equals("")))
        {
            try {
                    String tmp = grnID.getText().trim();
                    String check = "SELECT grn_id "
                                 + "FROM grn "
                                 + "WHERE grn_id=?";
            
                    prepst = dbcon.prepareStatement(check);
                    prepst.setString(1, tmp);
                    ResultSet rest=prepst.executeQuery();
            
            
                    if(!rest.next())
                    {
                        JOptionPane.showMessageDialog(null, "Invalid GRN ID");
                        return;
                    }
                    
                    else
                    {
                    
                    String sql = "SELECT * FROM grn WHERE grn_id=?";
                    prepst = dbcon.prepareStatement(sql);
                    
                    String gid = grnID.getText().trim();
                
                    prepst.setString(1, gid);
                    
                    prepst.execute();
                    
                    res=prepst.executeQuery();
                    grnTable.setModel(DbUtils.resultSetToTableModel(res));
                    tableCustom();
                    }
                    
                    postAction();
                }
                catch (Exception e) {
                    e.printStackTrace();
                }

        }//End of Instance #1
        
        
        
        
        //Instance #2 (Supplier Name + From Date + To Date)
        else if ((grnID==null || grnID.getText().trim().equals("") ) &&
                (supplierName.getSelectedItem()!=null) &&
                (grnDateFrom.getDate()!=null) &&
                (grnDateTo.getDate()!=null) &&
                (totalFrom==null || totalFrom.getText().trim().equals(""))&& 
                (totalTo==null || totalTo.getText().trim().equals("")))
        {
            try {
                    
                    String sql = "SELECT * "
                               + "FROM grn "
                               + "WHERE ((sup_name=?) && (pur_date BETWEEN ? AND ?))";
                    prepst = dbcon.prepareStatement(sql);
                    
                    String tmp = supplierName.getSelectedItem().toString().trim();
                
                    java.util.Date grndatefrom = grnDateFrom.getDate();
                    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
                    String fromdate = df.format(grndatefrom);
                    
                    java.util.Date grndateto = grnDateTo.getDate();
                    SimpleDateFormat dt = new SimpleDateFormat("dd-MM-yyyy");
                    String todate = dt.format(grndateto);
                    
                    prepst.setString(1, tmp);
                    prepst.setString(2, fromdate);
                    prepst.setString(3, todate);
                    
                    prepst.execute();
                    
                    res=prepst.executeQuery();
                    grnTable.setModel(DbUtils.resultSetToTableModel(res));
                    tableCustom();
                    
                    postAction();

                }
                catch (Exception e) {
                    e.printStackTrace();
                }

        }//End of Instance #2
        
        else if ((supplierName.getSelectedItem()!=null) && 
                 (grnDateFrom.getDate()!=null) && 
                 (grnDateTo.getDate()==null) && 
                ((totalFrom==null) || 
                 (totalFrom.getText().trim().equals(""))))
        {    
            do
            {
              JOptionPane.showMessageDialog(null, "Please complete the Total Amount filter options to proceed");
              return;  
            }
            while((totalFrom!=null) || !(totalFrom.getText().trim().equals("")));
        }
        
        else if ((supplierName.getSelectedItem()!=null) && 
                 (grnDateFrom.getDate()!=null) && 
                 (grnDateTo.getDate()==null) && 
                ((totalFrom!=null) || 
                !(totalFrom.getText().trim().equals(""))) && 
                ((totalTo!=null) || 
                !(totalTo.getText().trim().equals(""))))
        {    
            do
            {
              JOptionPane.showMessageDialog(null, "Please complete the Total Amount filter options to proceed");
              return;  
            }
            while((totalTo!=null || !(totalTo.getText().trim().equals(""))));
        }
        
        //Instance #3 (Supplier Name + From Date + To Date + From Total + To Total)
        else if ((grnID==null || grnID.getText().trim().equals("") ) &&
                (supplierName.getSelectedItem()!=null) &&
                (grnDateFrom.getDate()!=null) &&
                (grnDateTo.getDate()!=null) &&
                (totalFrom!=null || !(totalFrom.getText().trim().equals("")))&& 
                (totalTo!=null || !(totalTo.getText().trim().equals(""))))
        {
            try {
                    
                    String sql = "SELECT * "
                               + "FROM grn "
                               + "WHERE ((sup_name=?) && (pur_date BETWEEN ? AND ?) && (total BETWEEN ? AND ?))";
                    prepst = dbcon.prepareStatement(sql);
                    
                    String tmp = supplierName.getSelectedItem().toString().trim();
                
                    java.util.Date grndatefrom = grnDateFrom.getDate();
                    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
                    String fromdate = df.format(grndatefrom);
                    
                    java.util.Date grndateto = grnDateTo.getDate();
                    SimpleDateFormat dt = new SimpleDateFormat("dd-MM-yyyy");
                    String todate = dt.format(grndateto);
                    
                    String fromtotal = totalFrom.getText().trim();
                    String tototal = totalTo.getText().trim();
                    
                    prepst.setString(1, tmp);
                    prepst.setString(2, fromdate);
                    prepst.setString(3, todate);
                    prepst.setString(4, fromtotal);
                    prepst.setString(5, tototal);
                    
                    prepst.execute();
                    
                    res=prepst.executeQuery();
                    grnTable.setModel(DbUtils.resultSetToTableModel(res));
                    tableCustom();
                    
                    postAction();
                }
                catch (Exception e) {
                    e.printStackTrace();
                }
 
        }//End of Instance #3
        
        
    }
    
    private void postAction()
    {   
            int rows = grnTable.getRowCount();
            
       if(rows!=0)        
       {
            JOptionPane.showMessageDialog(null, "Results filtered successfully");
            
            grnID.setText(null);   
            supplierName.setSelectedItem(null);
            grnDateFrom.setCalendar(null);
            grnDateTo.setCalendar(null);
            totalFrom.setText(null);
            totalTo.setText(null);
           
            subreleaseField();
            releaseField();
       }
       else
       {
           JOptionPane.showMessageDialog(null, "No results found");
       }
       
    }

    public void lockField()
    {
        supplierName.setEnabled(false);
        grnDateFrom.setEnabled(false);
        grnDateTo.setEnabled(false);
        totalFrom.setEnabled(false);
        totalTo.setEnabled(false);
        
        supplierName.setFocusable(false);
        grnDateFrom.setFocusable(false);
        grnDateTo.setFocusable(false);
        totalFrom.setFocusable(false);
        totalTo.setFocusable(false);
        
        supplierName.setSelectedItem(null);
        grnDateFrom.setCalendar(null);
        grnDateTo.setCalendar(null);
        totalFrom.setText(null);
        totalTo.setText(null);
        
        
    }
    
    public void sublockField()
    {
        grnID.setEnabled(false);
        grnID.setText(null);
        grnID.setFocusable(false);
    }
    
    public void subreleaseField()
    {
        grnID.setEnabled(true);
        grnID.setFocusable(true);
    }
    
    public void releaseField()
    {
        supplierName.setEnabled(true);
        grnDateFrom.setEnabled(true);
        grnDateTo.setEnabled(true);
        totalFrom.setEnabled(true);
        totalTo.setEnabled(true);
        
        supplierName.setFocusable(true);
        grnDateFrom.setFocusable(true);
        grnDateTo.setFocusable(true);
        totalFrom.setFocusable(true);
        totalTo.setFocusable(true);
    }
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Main m5=new Main();
       m5.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       GRNMain m5=new GRNMain();
       m5.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
            cleanAction();
    }//GEN-LAST:event_resetActionPerformed

    private void searchGrnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchGrnActionPerformed
            passData();
    }//GEN-LAST:event_searchGrnActionPerformed

    private void grnIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grnIDMouseClicked
            lockField();
    }//GEN-LAST:event_grnIDMouseClicked

    private void supplierNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierNameMouseClicked
            sublockField();
    }//GEN-LAST:event_supplierNameMouseClicked

    private void totalFromMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalFromMouseClicked
            sublockField();
    }//GEN-LAST:event_totalFromMouseClicked

    private void totalToMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_totalToMouseClicked
            sublockField();
    }//GEN-LAST:event_totalToMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchGRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchGRN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser grnDate;
    private com.toedter.calendar.JDateChooser grnDateFrom;
    private com.toedter.calendar.JDateChooser grnDateTo;
    private javax.swing.JTextField grnID;
    private javax.swing.JTable grnTable;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reset;
    private javax.swing.JButton searchGrn;
    private javax.swing.JComboBox<String> supplierName;
    private javax.swing.JTextField totalFrom;
    private javax.swing.JTextField totalTo;
    // End of variables declaration//GEN-END:variables
}
